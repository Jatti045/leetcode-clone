[
  {
    "id": 1,
    "status": "Solved",
    "title": "Two Sum",
    "solution": "https://leetcode.com/problems/two-sum/",
    "acceptance": "49.5%",
    "difficulty": "Easy",
    "frequency": "High",
    "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.",
    "examples": [
      {
        "input": "nums = [2,7,11,15], target = 9",
        "output": "[0,1]",
        "explanation": "Because nums[0] + nums[1] == 9."
      },
      {
        "input": "nums = [3,2,4], target = 6",
        "output": "[1,2]",
        "explanation": "Because nums[1] + nums[2] == 6."
      }
    ],
    "constraints": [
      "2 <= nums.length <= 10^4",
      "-10^9 <= nums[i] <= 10^9",
      "-10^9 <= target <= 10^9",
      "Only one valid answer exists."
    ]
  },
  {
    "id": 2,
    "status": "Unsolved",
    "title": "Median of Two Sorted Arrays",
    "solution": "https://leetcode.com/problems/median-of-two-sorted-arrays/",
    "acceptance": "33.0%",
    "difficulty": "Hard",
    "frequency": "Medium",
    "description": "Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).",
    "examples": [
      {
        "input": "nums1 = [1,3], nums2 = [2]",
        "output": "2.00000",
        "explanation": "Merged array is [1,2,3], so the median is 2."
      },
      {
        "input": "nums1 = [1,2], nums2 = [3,4]",
        "output": "2.50000",
        "explanation": "Merged array is [1,2,3,4], median is (2+3)/2 = 2.5."
      }
    ],
    "constraints": [
      "nums1.length + nums2.length >= 1",
      "-10^6 <= nums1[i], nums2[i] <= 10^6"
    ]
  },
  {
    "id": 3,
    "status": "Attempted",
    "title": "Longest Substring Without Repeating Characters",
    "solution": "https://leetcode.com/problems/longest-substring-without-repeating-characters/",
    "acceptance": "34.8%",
    "difficulty": "Medium",
    "frequency": "High",
    "description": "Given a string s, find the length of the longest substring without repeating characters.",
    "examples": [
      {
        "input": "s = \"abcabcbb\"",
        "output": "3",
        "explanation": "The longest substring is \"abc\", with length 3."
      },
      {
        "input": "s = \"bbbbb\"",
        "output": "1",
        "explanation": "The longest substring is \"b\", with length 1."
      },
      {
        "input": "s = \"pwwkew\"",
        "output": "3",
        "explanation": "The longest substring is \"wke\", with length 3."
      }
    ],
    "constraints": [
      "0 <= s.length <= 5 * 10^4",
      "s consists of English letters, digits, symbols and spaces."
    ]
  },
  {
    "id": 4,
    "status": "Unsolved",
    "title": "Valid Parentheses",
    "solution": "https://leetcode.com/problems/valid-parentheses/",
    "acceptance": "40.5%",
    "difficulty": "Easy",
    "frequency": "High",
    "description": "Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. An input string is valid if: 1. Open brackets must be closed by the same type of brackets. 2. Open brackets must be closed in the correct order.",
    "examples": [
      {
        "input": "s = \"()\"",
        "output": "true"
      },
      {
        "input": "s = \"()[]{}\"",
        "output": "true"
      },
      {
        "input": "s = \"(]\"",
        "output": "false"
      }
    ],
    "constraints": [
      "1 <= s.length <= 10^4",
      "s consists of parentheses only '()[]{}'"
    ]
  },
  {
    "id": 5,
    "status": "Solved",
    "title": "Merge k Sorted Lists",
    "solution": "https://leetcode.com/problems/merge-k-sorted-lists/",
    "acceptance": "42.6%",
    "difficulty": "Hard",
    "frequency": "Low",
    "description": "You are given an array of k linked-lists, each linked-list is sorted in ascending order. Merge all the linked-lists into one sorted linked-list and return it.",
    "examples": [
      {
        "input": "lists = [[1,4,5],[1,3,4],[2,6]]",
        "output": "[1,1,2,3,4,4,5,6]",
        "explanation": "Merged list: 1->1->2->3->4->4->5->6."
      },
      {
        "input": "lists = []",
        "output": "[]"
      },
      {
        "input": "lists = [[]]",
        "output": "[]"
      }
    ],
    "constraints": [
      "k == lists.length",
      "0 <= k <= 10^4",
      "0 <= lists[i].length <= 500",
      "-10^4 <= lists[i][j] <= 10^4",
      "lists[i] is sorted in ascending order.",
      "The sum of lists[i].length won't exceed 10^4."
    ]
  },
  {
    "id": 6,
    "status": "Solved",
    "title": "Add Two Numbers",
    "solution": "https://leetcode.com/problems/add-two-numbers/",
    "acceptance": "42.0%",
    "difficulty": "Medium",
    "frequency": "High",
    "description": "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.",
    "examples": [
      {
        "input": "l1 = [2,4,3], l2 = [5,6,4]",
        "output": "[7,0,8]",
        "explanation": "342 + 465 = 807."
      }
    ],
    "constraints": [
      "The number of nodes in each linked list is in the range [1, 100].",
      "0 <= Node.val <= 9",
      "It is guaranteed that the list represents a number that does not have leading zeros."
    ]
  },
  {
    "id": 7,
    "status": "Solved",
    "title": "Reverse Integer",
    "solution": "https://leetcode.com/problems/reverse-integer/",
    "acceptance": "25.5%",
    "difficulty": "Medium",
    "frequency": "High",
    "description": "Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range, return 0.",
    "examples": [
      {
        "input": "x = 123",
        "output": "321"
      },
      {
        "input": "x = -123",
        "output": "-321"
      },
      {
        "input": "x = 120",
        "output": "21"
      }
    ],
    "constraints": ["-2^31 <= x <= 2^31 - 1"]
  },
  {
    "id": 8,
    "status": "Unsolved",
    "title": "String to Integer (atoi)",
    "solution": "https://leetcode.com/problems/string-to-integer-atoi/",
    "acceptance": "27.3%",
    "difficulty": "Medium",
    "frequency": "High",
    "description": "Implement the myAtoi(string s) function, which converts a string to a 32-bit signed integer.",
    "examples": [
      {
        "input": "s = \"42\"",
        "output": "42"
      },
      {
        "input": "s = \"   -42\"",
        "output": "-42"
      },
      {
        "input": "s = \"4193 with words\"",
        "output": "4193"
      }
    ],
    "constraints": [
      "0 <= s.length <= 200",
      "s consists of English letters, digits, ' ', '+', '-', and '.'"
    ]
  },
  {
    "id": 9,
    "status": "Solved",
    "title": "Palindrome Number",
    "solution": "https://leetcode.com/problems/palindrome-number/",
    "acceptance": "53.5%",
    "difficulty": "Easy",
    "frequency": "Medium",
    "description": "Given an integer x, return true if x is a palindrome. An integer is a palindrome when it reads the same backward as forward.",
    "examples": [
      {
        "input": "x = 121",
        "output": "true"
      },
      {
        "input": "x = -121",
        "output": "false"
      },
      {
        "input": "x = 10",
        "output": "false"
      }
    ],
    "constraints": ["-2^31 <= x <= 2^31 - 1"]
  },
  {
    "id": 10,
    "status": "Solved",
    "title": "Roman to Integer",
    "solution": "https://leetcode.com/problems/roman-to-integer/",
    "acceptance": "56.0%",
    "difficulty": "Easy",
    "frequency": "High",
    "description": "Convert a roman numeral to an integer.",
    "examples": [
      {
        "input": "s = \"III\"",
        "output": "3"
      },
      {
        "input": "s = \"LVIII\"",
        "output": "58",
        "explanation": "L = 50, V = 5, III = 3."
      },
      {
        "input": "s = \"MCMXCIV\"",
        "output": "1994",
        "explanation": "M = 1000, CM = 900, XC = 90 and IV = 4."
      }
    ],
    "constraints": [
      "1 <= s.length <= 15",
      "s contains only the characters ('I', 'V', 'X', 'L', 'C', 'D', 'M').",
      "It is guaranteed that s is a valid roman numeral in the range [1, 3999]."
    ]
  },
  {
    "id": 11,
    "status": "Solved",
    "title": "Container With Most Water",
    "solution": "https://leetcode.com/problems/container-with-most-water/",
    "acceptance": "49.7%",
    "difficulty": "Medium",
    "frequency": "High",
    "description": "Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai), find two lines that together with the x-axis form a container, such that the container contains the most water.",
    "examples": [
      {
        "input": "height = [1,8,6,2,5,4,8,3,7]",
        "output": "49",
        "explanation": "The container formed between the lines at index 2 and 8 gives area = 49."
      }
    ],
    "constraints": [
      "n == height.length",
      "2 <= n <= 10^5",
      "0 <= height[i] <= 10^4"
    ]
  },
  {
    "id": 12,
    "status": "Unsolved",
    "title": "3Sum",
    "solution": "https://leetcode.com/problems/3sum/",
    "acceptance": "32.4%",
    "difficulty": "Medium",
    "frequency": "High",
    "description": "Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i, j, and k are distinct and nums[i] + nums[j] + nums[k] == 0. The solution set must not contain duplicate triplets.",
    "examples": [
      {
        "input": "nums = [-1,0,1,2,-1,-4]",
        "output": "[[-1,-1,2],[-1,0,1]]"
      }
    ],
    "constraints": ["0 <= nums.length <= 3000", "-10^5 <= nums[i] <= 10^5"]
  },
  {
    "id": 13,
    "status": "Solved",
    "title": "Letter Combinations of a Phone Number",
    "solution": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/",
    "acceptance": "58.2%",
    "difficulty": "Medium",
    "frequency": "Medium",
    "description": "Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent based on telephone buttons mapping. Note that 1 does not map to any letters.",
    "examples": [
      {
        "input": "digits = \"23\"",
        "output": "[\"ad\",\"ae\",\"af\",\"bd\",\"be\",\"bf\",\"cd\",\"ce\",\"cf\"]"
      }
    ],
    "constraints": [
      "0 <= digits.length <= 4",
      "digits[i] is a digit in the range ['2', '9']."
    ]
  },
  {
    "id": 14,
    "status": "Solved",
    "title": "Generate Parentheses",
    "solution": "https://leetcode.com/problems/generate-parentheses/",
    "acceptance": "65.3%",
    "difficulty": "Medium",
    "frequency": "High",
    "description": "Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.",
    "examples": [
      {
        "input": "n = 3",
        "output": "[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]"
      }
    ],
    "constraints": ["1 <= n <= 8"]
  },
  {
    "id": 15,
    "status": "Attempted",
    "title": "Swap Nodes in Pairs",
    "solution": "https://leetcode.com/problems/swap-nodes-in-pairs/",
    "acceptance": "64.2%",
    "difficulty": "Medium",
    "frequency": "Medium",
    "description": "Given a linked list, swap every two adjacent nodes and return its head without modifying the values in the nodes.",
    "examples": [
      {
        "input": "head = [1,2,3,4]",
        "output": "[2,1,4,3]"
      }
    ],
    "constraints": [
      "The number of nodes in the list is in the range [0, 100].",
      "0 <= Node.val <= 100"
    ]
  },
  {
    "id": 16,
    "status": "Solved",
    "title": "Reverse Linked List",
    "solution": "https://leetcode.com/problems/reverse-linked-list/",
    "acceptance": "76.1%",
    "difficulty": "Easy",
    "frequency": "High",
    "description": "Reverse a singly linked list.",
    "examples": [
      {
        "input": "head = [1,2,3,4,5]",
        "output": "[5,4,3,2,1]"
      }
    ],
    "constraints": [
      "The number of nodes in the list is in the range [0, 5000]."
    ]
  },
  {
    "id": 17,
    "status": "Solved",
    "title": "Remove Duplicates from Sorted Array",
    "solution": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/",
    "acceptance": "47.8%",
    "difficulty": "Easy",
    "frequency": "High",
    "description": "Given a sorted array nums, remove the duplicates in-place such that each element appears only once and return the new length.",
    "examples": [
      {
        "input": "nums = [0,0,1,1,1,2,2,3,3,4]",
        "output": "5",
        "explanation": "After removal, the first five elements are [0,1,2,3,4]."
      }
    ],
    "constraints": [
      "0 <= nums.length <= 3 * 10^4",
      "-100 <= nums[i] <= 100",
      "nums is sorted in non-decreasing order."
    ]
  },
  {
    "id": 18,
    "status": "Solved",
    "title": "Search Insert Position",
    "solution": "https://leetcode.com/problems/search-insert-position/",
    "acceptance": "41.0%",
    "difficulty": "Easy",
    "frequency": "Medium",
    "description": "Given a sorted array of distinct integers and a target value, return the index if the target is found; if not, return the index where it would be if it were inserted in order.",
    "examples": [
      {
        "input": "nums = [1,3,5,6], target = 5",
        "output": "2"
      },
      {
        "input": "nums = [1,3,5,6], target = 2",
        "output": "1"
      }
    ],
    "constraints": [
      "1 <= nums.length <= 10^4",
      "-10^4 <= nums[i] <= 10^4",
      "nums contains distinct values sorted in ascending order.",
      "-10^4 <= target <= 10^4"
    ]
  },
  {
    "id": 19,
    "status": "Solved",
    "title": "Climbing Stairs",
    "solution": "https://leetcode.com/problems/climbing-stairs/",
    "acceptance": "66.0%",
    "difficulty": "Easy",
    "frequency": "High",
    "description": "You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?",
    "examples": [
      {
        "input": "n = 2",
        "output": "2",
        "explanation": "There are 2 ways: 1+1 or 2."
      },
      {
        "input": "n = 3",
        "output": "3",
        "explanation": "There are 3 ways: 1+1+1, 1+2, or 2+1."
      }
    ],
    "constraints": ["1 <= n <= 45"]
  },
  {
    "id": 20,
    "status": "Solved",
    "title": "Maximum Subarray",
    "solution": "https://leetcode.com/problems/maximum-subarray/",
    "acceptance": "55.5%",
    "difficulty": "Easy",
    "frequency": "High",
    "description": "Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.",
    "examples": [
      {
        "input": "nums = [-2,1,-3,4,-1,2,1,-5,4]",
        "output": "6",
        "explanation": "The subarray [4,-1,2,1] has the largest sum = 6."
      }
    ],
    "constraints": ["1 <= nums.length <= 10^5", "-10^4 <= nums[i] <= 10^4"]
  },
  {
    "id": 21,
    "status": "Solved",
    "title": "Power of Two",
    "solution": "https://leetcode.com/problems/power-of-two/",
    "acceptance": "42.0%",
    "difficulty": "Easy",
    "frequency": "Medium",
    "description": "Given an integer n, return true if it is a power of two. Otherwise, return false.",
    "examples": [
      {
        "input": "n = 16",
        "output": "true"
      },
      {
        "input": "n = 3",
        "output": "false"
      }
    ],
    "constraints": ["-2^31 <= n <= 2^31 - 1"]
  },
  {
    "id": 22,
    "status": "Attempted",
    "title": "Factorial Trailing Zeroes",
    "solution": "https://leetcode.com/problems/factorial-trailing-zeroes/",
    "acceptance": "37.5%",
    "difficulty": "Medium",
    "frequency": "Medium",
    "description": "Given an integer n, return the number of trailing zeroes in n!.",
    "examples": [
      {
        "input": "n = 5",
        "output": "1",
        "explanation": "5! = 120, which has 1 trailing zero."
      },
      {
        "input": "n = 3",
        "output": "0"
      }
    ],
    "constraints": ["0 <= n <= 10^4"]
  },
  {
    "id": 23,
    "status": "Unsolved",
    "title": "Happy Number",
    "solution": "https://leetcode.com/problems/happy-number/",
    "acceptance": "53.0%",
    "difficulty": "Easy",
    "frequency": "High",
    "description": "Write an algorithm to determine if a number n is happy. A happy number is defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 or it loops endlessly in a cycle which does not include 1.",
    "examples": [
      {
        "input": "n = 19",
        "output": "true",
        "explanation": "19 is a happy number as the process ends in 1."
      }
    ],
    "constraints": ["1 <= n <= 2^31 - 1"]
  },
  {
    "id": 24,
    "status": "Solved",
    "title": "Intersection of Two Arrays II",
    "solution": "https://leetcode.com/problems/intersection-of-two-arrays-ii/",
    "acceptance": "59.0%",
    "difficulty": "Easy",
    "frequency": "Medium",
    "description": "Given two arrays, write a function to compute their intersection. Each element in the result should appear as many times as it shows in both arrays.",
    "examples": [
      {
        "input": "nums1 = [1,2,2,1], nums2 = [2,2]",
        "output": "[2,2]"
      }
    ],
    "constraints": [
      "0 <= nums1.length, nums2.length <= 1000",
      "0 <= nums[i], nums2[i] <= 1000"
    ]
  },
  {
    "id": 25,
    "status": "Solved",
    "title": "Valid Anagram",
    "solution": "https://leetcode.com/problems/valid-anagram/",
    "acceptance": "65.0%",
    "difficulty": "Easy",
    "frequency": "Medium",
    "description": "Given two strings s and t, return true if t is an anagram of s, and false otherwise.",
    "examples": [
      {
        "input": "s = \"anagram\", t = \"nagaram\"",
        "output": "true"
      },
      {
        "input": "s = \"rat\", t = \"car\"",
        "output": "false"
      }
    ],
    "constraints": [
      "1 <= s.length, t.length <= 5 * 10^4",
      "s and t consist of lowercase English letters."
    ]
  },
  {
    "id": 26,
    "status": "Unsolved",
    "title": "Climbing Stairs (Variant)",
    "solution": "https://leetcode.com/problems/climbing-stairs/",
    "acceptance": "68.0%",
    "difficulty": "Easy",
    "frequency": "Medium",
    "description": "A variation of the climbing stairs problem. Given n steps, if you can climb 1, 2, or 3 steps at a time, return the number of distinct ways to reach the top.",
    "examples": [
      {
        "input": "n = 3",
        "output": "4",
        "explanation": "Ways: 1+1+1, 1+2, 2+1, 3."
      }
    ],
    "constraints": ["1 <= n <= 50"]
  },
  {
    "id": 27,
    "status": "Solved",
    "title": "Binary Search",
    "solution": "https://leetcode.com/problems/binary-search/",
    "acceptance": "74.0%",
    "difficulty": "Easy",
    "frequency": "High",
    "description": "Given a sorted array and a target value, return the index if the target is found, otherwise return -1 using binary search.",
    "examples": [
      {
        "input": "nums = [-1,0,3,5,9,12], target = 9",
        "output": "4"
      },
      {
        "input": "nums = [-1,0,3,5,9,12], target = 2",
        "output": "-1"
      }
    ],
    "constraints": [
      "1 <= nums.length <= 10^4",
      "-10^4 <= nums[i], target <= 10^4",
      "nums is sorted in ascending order."
    ]
  },
  {
    "id": 28,
    "status": "Solved",
    "title": "Fibonacci Number",
    "solution": "https://leetcode.com/problems/fibonacci-number/",
    "acceptance": "67.0%",
    "difficulty": "Easy",
    "frequency": "Medium",
    "description": "The Fibonacci numbers, commonly denoted F(n), form a sequence, where each number is the sum of the two preceding ones, starting from 0 and 1.",
    "examples": [
      {
        "input": "n = 2",
        "output": "1"
      },
      {
        "input": "n = 3",
        "output": "2"
      },
      {
        "input": "n = 4",
        "output": "3"
      }
    ],
    "constraints": ["0 <= n <= 30"]
  },
  {
    "id": 29,
    "status": "Attempted",
    "title": "Power of Three",
    "solution": "https://leetcode.com/problems/power-of-three/",
    "acceptance": "52.0%",
    "difficulty": "Easy",
    "frequency": "Medium",
    "description": "Given an integer n, return true if it is a power of three, otherwise return false.",
    "examples": [
      {
        "input": "n = 27",
        "output": "true"
      },
      {
        "input": "n = 0",
        "output": "false"
      }
    ],
    "constraints": ["-2^31 <= n <= 2^31 - 1"]
  },
  {
    "id": 30,
    "status": "Solved",
    "title": "Invert Binary Tree",
    "solution": "https://leetcode.com/problems/invert-binary-tree/",
    "acceptance": "78.0%",
    "difficulty": "Easy",
    "frequency": "High",
    "description": "Invert a binary tree by swapping every left and right child.",
    "examples": [
      {
        "input": "root = [4,2,7,1,3,6,9]",
        "output": "[4,7,2,9,6,3,1]"
      }
    ],
    "constraints": [
      "The number of nodes in the tree is in the range [0, 100].",
      "-100 <= Node.val <= 100"
    ]
  },
  {
    "id": 31,
    "status": "Solved",
    "title": "Merge Intervals",
    "solution": "https://leetcode.com/problems/merge-intervals/",
    "acceptance": "57.0%",
    "difficulty": "Medium",
    "frequency": "High",
    "description": "Given an array of intervals where intervals[i] = [start, end], merge all overlapping intervals, and return an array of the non-overlapping intervals.",
    "examples": [
      {
        "input": "intervals = [[1,3],[2,6],[8,10],[15,18]]",
        "output": "[[1,6],[8,10],[15,18]]"
      }
    ],
    "constraints": [
      "1 <= intervals.length <= 10^4",
      "intervals[i].length == 2",
      "0 <= intervals[i][0] <= intervals[i][1] <= 10^4"
    ]
  },
  {
    "id": 32,
    "status": "Unsolved",
    "title": "Insert Interval",
    "solution": "https://leetcode.com/problems/insert-interval/",
    "acceptance": "33.0%",
    "difficulty": "Medium",
    "frequency": "Medium",
    "description": "Given a set of non-overlapping intervals sorted by their start time, insert a new interval into the intervals (merge if necessary).",
    "examples": [
      {
        "input": "intervals = [[1,3],[6,9]], newInterval = [2,5]",
        "output": "[[1,5],[6,9]]"
      }
    ],
    "constraints": [
      "0 <= intervals.length <= 10^4",
      "intervals[i].length == 2",
      "intervals are sorted by intervals[i][0] in ascending order",
      "0 <= newInterval[0] <= newInterval[1] <= 10^4"
    ]
  },
  {
    "id": 33,
    "status": "Solved",
    "title": "Group Anagrams",
    "solution": "https://leetcode.com/problems/group-anagrams/",
    "acceptance": "59.0%",
    "difficulty": "Medium",
    "frequency": "High",
    "description": "Given an array of strings, group anagrams together.",
    "examples": [
      {
        "input": "strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]",
        "output": "[[\"bat\"],[\"tan\",\"nat\"],[\"eat\",\"tea\",\"ate\"]]"
      }
    ],
    "constraints": [
      "1 <= strs.length <= 10^4",
      "0 <= strs[i].length <= 100",
      "strs[i] consists of lowercase English letters."
    ]
  },
  {
    "id": 34,
    "status": "Attempted",
    "title": "Word Ladder",
    "solution": "https://leetcode.com/problems/word-ladder/",
    "acceptance": "47.0%",
    "difficulty": "Hard",
    "frequency": "High",
    "description": "Given two words beginWord and endWord, and a dictionary wordList, return the length of the shortest transformation sequence from beginWord to endWord, or 0 if no such sequence exists.",
    "examples": [
      {
        "input": "beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]",
        "output": "5",
        "explanation": "The sequence is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\"."
      }
    ],
    "constraints": [
      "1 <= beginWord.length <= 10",
      "endWord.length == beginWord.length",
      "1 <= wordList.length <= 5000",
      "beginWord, endWord, and wordList[i] consist of lowercase English letters."
    ]
  },
  {
    "id": 35,
    "status": "Solved",
    "title": "Find the Duplicate Number",
    "solution": "https://leetcode.com/problems/find-the-duplicate-number/",
    "acceptance": "68.0%",
    "difficulty": "Medium",
    "frequency": "Medium",
    "description": "Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive, prove that at least one duplicate number must exist and return that duplicate number.",
    "examples": [
      {
        "input": "nums = [1,3,4,2,2]",
        "output": "2"
      }
    ],
    "constraints": [
      "2 <= nums.length <= 10^5",
      "1 <= nums[i] <= nums.length - 1",
      "All the integers in nums appear only once except for precisely one integer which appears two or more times."
    ]
  },
  {
    "id": 36,
    "status": "Solved",
    "title": "Find All Numbers Disappeared in an Array",
    "solution": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/",
    "acceptance": "75.0%",
    "difficulty": "Easy",
    "frequency": "Medium",
    "description": "Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums.",
    "examples": [
      {
        "input": "nums = [4,3,2,7,8,2,3,1]",
        "output": "[5,6]"
      }
    ],
    "constraints": ["n == nums.length", "1 <= n <= 10^5", "1 <= nums[i] <= n"]
  },
  {
    "id": 37,
    "status": "Solved",
    "title": "Implement strStr()",
    "solution": "https://leetcode.com/problems/implement-strstr/",
    "acceptance": "42.0%",
    "difficulty": "Easy",
    "frequency": "Medium",
    "description": "Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.",
    "examples": [
      {
        "input": "haystack = \"sadbutsad\", needle = \"sad\"",
        "output": "0"
      },
      {
        "input": "haystack = \"leetcode\", needle = \"leeto\"",
        "output": "-1"
      }
    ],
    "constraints": [
      "0 <= haystack.length, needle.length <= 5 * 10^4",
      "haystack and needle consist of only lower-case English characters."
    ]
  },
  {
    "id": 38,
    "status": "Unsolved",
    "title": "Count Primes",
    "solution": "https://leetcode.com/problems/count-primes/",
    "acceptance": "36.0%",
    "difficulty": "Medium",
    "frequency": "Medium",
    "description": "Count the number of prime numbers less than a non-negative number, n.",
    "examples": [
      {
        "input": "n = 10",
        "output": "4",
        "explanation": "The prime numbers less than 10 are 2, 3, 5, 7."
      }
    ],
    "constraints": ["0 <= n <= 5 * 10^6"]
  },
  {
    "id": 39,
    "status": "Solved",
    "title": "Longest Palindromic Substring",
    "solution": "https://leetcode.com/problems/longest-palindromic-substring/",
    "acceptance": "32.0%",
    "difficulty": "Medium",
    "frequency": "High",
    "description": "Given a string s, return the longest palindromic substring in s.",
    "examples": [
      {
        "input": "s = \"babad\"",
        "output": "\"bab\"",
        "explanation": "Note: \"aba\" is also a valid answer."
      }
    ],
    "constraints": [
      "1 <= s.length <= 1000",
      "s consist of only digits and English letters."
    ]
  },
  {
    "id": 40,
    "status": "Solved",
    "title": "Implement Queue using Stacks",
    "solution": "https://leetcode.com/problems/implement-queue-using-stacks/",
    "acceptance": "46.0%",
    "difficulty": "Easy",
    "frequency": "Medium",
    "description": "Implement a first in first out (FIFO) queue using only two stacks. The implemented queue should support all the functions of a normal queue (push, pop, peek, and empty).",
    "examples": [
      {
        "input": "operations = [\"MyQueue\",\"push\",\"push\",\"peek\",\"pop\",\"empty\"]",
        "output": "[null,null,null,1,1,false]",
        "explanation": "Queue is initialized and operations are performed accordingly."
      }
    ],
    "constraints": [
      "1 <= number of operations <= 100",
      "All operations are valid."
    ]
  }
]
